plugins {
    id "java"
    id "org.springframework.boot" version "2.7.4"
    id "io.spring.dependency-management" version "1.0.14.RELEASE"
    id "com.adarshr.test-logger" version "3.2.0"
    id "jacoco"
}

repositories {
    mavenCentral()
}

group = "com.trynoice"
version = System.getenv("BUILD_VERSION") ?: "0.0.0-dev"

sourceCompatibility = "11"

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

springBoot {
    buildInfo()
}

bootRun {
    systemProperty "spring.profiles.active", "dev-default,dev"
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
    exclude 'application-dev*.properties'
}

tasks.withType(Test) {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    systemProperty "spring.profiles.active", "test"
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    shouldRunAfter test

    classpath = sourceSets.integrationTest.runtimeClasspath
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
}

check.dependsOn integrationTest

jacocoTestReport {
    executionData fileTree(buildDir).include("/jacoco/*.exec")

    reports {
        xml.required = true
    }
}

dependencies {
    def springDocVersion = '1.6.11'

    // to enable JavaDoc support in SpringDocs
    annotationProcessor 'com.github.therapi:therapi-runtime-javadoc-scribe:0.15.0'
    annotationProcessor 'org.projectlombok:lombok'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'com.auth0:java-jwt:4.0.0'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.1'
    implementation 'com.google.apis:google-api-services-androidpublisher:v3-rev20220926-2.0.0'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.10.0'
    implementation 'com.stripe:stripe-java:21.10.0'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'org.flywaydb:flyway-core:9.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.integration:spring-integration-core'
    implementation "org.springdoc:springdoc-openapi-javadoc:$springDocVersion"
    // https://github.com/springdoc/springdoc-openapi/issues/198
    implementation "org.springdoc:springdoc-openapi-security:$springDocVersion"
    implementation "org.springdoc:springdoc-openapi-ui:$springDocVersion"
    implementation 'org.postgresql:postgresql'

    implementation platform('software.amazon.awssdk:bom:2.17.265')
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:ses'

    implementation platform('com.google.cloud:spring-cloud-gcp-dependencies:3.3.0')
    implementation 'com.google.cloud:spring-cloud-gcp-starter-pubsub'


    testAnnotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    integrationTestAnnotationProcessor 'org.projectlombok:lombok'

    integrationTestCompileOnly 'org.projectlombok:lombok'

    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
    integrationTestImplementation 'org.testcontainers:postgresql:1.17.4'
}
